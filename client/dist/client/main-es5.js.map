{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/token.interceptor.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/expense-desc/expense-desc.component.ts","webpack:///src/app/expense-desc/expense-desc.component.html","webpack:///src/app/expense-history/expense-history.component.ts","webpack:///src/app/expense-history/expense-history.component.html","webpack:///src/app/expense-new/expense-new.component.ts","webpack:///src/app/expense-new/expense-new.component.html","webpack:///src/app/group-desc/group-desc.component.ts","webpack:///src/app/group-desc/group-desc.component.html","webpack:///src/app/group-edit/group-edit.component.ts","webpack:///src/app/group-edit/group-edit.component.html","webpack:///src/app/group-new/group-new.component.ts","webpack:///src/app/group-new/group-new.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/request-reset/request-reset.component.ts","webpack:///src/app/request-reset/request-reset.component.html","webpack:///src/app/response-reset/response-reset.component.ts","webpack:///src/app/response-reset/response-reset.component.html","webpack:///src/app/socketio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","appService","router","route","socketService","authService","isUser","fullName","getUserInfoFromLocalstorage","fullNameSource","next","setupSocketConnection","data","subscribe","result","userId","console","log","logout","res","signOut","setUserInfoInLocalStorage","setTokenInLocalStorage","navigate","err","selector","templateUrl","styleUrls","appRoutes","path","component","redirectTo","pathMatch","config","PROVIDER_ID","provider","provideConfig","tokenGetter","localStorage","getItem","AppModule","provide","useFactory","useClass","multi","forRoot","enableTracing","whitelistedDomains","declarations","imports","providers","bootstrap","AppService","http","toastr","url","SOCKET_ENDPOINT","JSON","parse","setItem","stringify","getTokenFromLocalstorage","asObservable","formdata","post","body","get","pipe","response","error","handleError","groupId","put","page","numberOfExpensePerPage","expenseId","errorMessage","message","status","providedIn","AuthService","jwtHelperService","token","tokenExpired","isTokenExpired","TokenInterceptor","auth","request","clone","setHeaders","Authorization","handle","DashboardComponent","isGroupList","groupList","yourShareArray","getAllGroups","currentUserId","forEach","element","getAllExpensesforYourShare","groupName","$event","stopPropagation","deleteGroup","getAllExpenses","netBalance","expenseList","expenseMembers","filter","el","length","paidShare","owedShare","text","share","Math","abs","toFixed","yourShare","count","push","goTonewGroup","ExpenseDescComponent","ExpenseHistoryComponent","ExpenseNewComponent","GroupDescComponent","fb","expenseListGroupBalance","expenseHistory","expenseHistoryNotes","resetForm","currentUserName","params","getGroupById","group","groupMembers","createExpenseForm","expenseName","required","amount","splitOption","expenseOn","addedOn","addedBy","deletedOn","deletedBy","updatedOn","updatedBy","addSinglePayer","splitOptionSelected","isOwer","amountFilled","value","isSolePayer","paidAmount","reduce","total","owedAmount","addEditLabel","expenseFormValue","expenseHistoryNotesBy","expenseHistoryObj","Date","now","createExpense","closeBtn","nativeElement","click","success","notify","onFormChanges","expense","editExpense","expenseInitial","isSolePayerInitial","expenseMembersInitial","ispaidShareChanged","expenseObj","payshareText","index","firstName","countExpense","getAllExpensesForGroupBalance","lastPage","ceil","getExpenseById","setFormValue","setValue","splitShareEqually","setDisplayPayer","deleteExpense","displayPayer","isMultiplePayer","isExpenseChanged","displayPayerObj","multiplePayer","noOfSplitMembers","owedPercentageShare","filteredName","filtered","selectedItemExist","noOfPayers","payer","yourExpense","isCurrentUserExpense","groupMember","member","notification","socket","emit","resetExpense","addExpenseMember","saveSplitOption","encapsulation","None","GroupEditComponent","isUserList","userList","selectedGroupMember","editGroup","createGroupFormValue","createGroupForm","apiResponse","setTimeout","getAllUsers","isGroupMembersChanged","addUserToGroup","GroupNewComponent","selectedUserList","createGroup","indexOf","LoginComponent","hide","signinFunction","loginFormValue","createLoginForm","emailOruserName","password","userDetails","socialSignupFunction","user","lastName","email","socialSignup","signupFunction","subscription","authState","name","signIn","unsubscribe","goToSignup","RegisterComponent","emailPattern","country_code_list","signUpFormValue","createSignupForm","userName","mobileNo","country_code","createdOn","goToLogin","pattern","minLength","maxLength","RequestResetComponent","IsvalidForm","RequestResetForm","form","valid","requestReset","reset","RequestResetUser","ResponseResetComponent","IsResetFormValid","CurrentState","resetToken","VerifyToken","Init","ValidPasswordToken","resettoken","ResponseResetForm","newPassword","confirmPassword","passwordFormGroup","new_password","controls","confirm_password","doesNotMatch","SocketioService","on","info","enableHtml","onTap","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute} from '@angular/router';\nimport { SocketioService } from './socketio.service';\nimport { AuthService, SocialUser } from 'angularx-social-login';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\nisUser:boolean=true;\nfullName='';\nisLogin:boolean;\nisRegister:boolean;\nconstructor(private appService: AppService,\n  private router: Router,\n  private route: ActivatedRoute,\n  private socketService: SocketioService,\n  private authService: AuthService){\n}\nngOnInit(){\n    //if user is present in localstorage, get from there or else initialize \n    if(this.appService.getUserInfoFromLocalstorage()){\n      this.appService.fullNameSource.next(this.appService.getUserInfoFromLocalstorage().fullName);\n      //socket connection\n        this.socketService.setupSocketConnection({data:'user logged in ,socket established!(App component)'});\n    }\n    this.appService.fullName.subscribe(result => {\n      this.fullName = result; \n  });\n\n}\n\n\nlogout(){\nlet userId=this.appService.getUserInfoFromLocalstorage()['userId']\nconsole.log(userId);\nthis.appService.logout(userId).subscribe( (res) =>{\n console.log(res);\n})\nif(this.appService.getUserInfoFromLocalstorage()['socialSignup']){\n  this.authService.signOut()\n  .then(()=>{\n    this.appService.setUserInfoInLocalStorage('')\n    this.appService.setTokenInLocalStorage(null)\n    this.fullName=''\n    this.appService.fullNameSource.next('');\n    this.router.navigate(['/login']);\n  }).catch((err)=>{\n    console.log(err)\n    this.appService.setUserInfoInLocalStorage('')\n    this.appService.setTokenInLocalStorage(null)\n    this.fullName=''\n    this.appService.fullNameSource.next('');\n    this.router.navigate(['/login']);\n  })\n  }\n  else{\n    this.appService.setUserInfoInLocalStorage('')\n    this.appService.setTokenInLocalStorage(null)\n    this.router.navigate(['/login']);\n  }\n}\n\ntoasterClickedHandler() {\nconsole.log('Toastr clicked');\n}\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark flex-class\">\n  <div>\n    <span class=\"material-icons\">monetization_on </span>\n    <a class=\"navbar-brand\" href=\"/\">Split Wise</a> \n  </div>\n  <div>\n    <span class=\"material-icons\" [hidden]=\"!fullName\">face </span> \n    <!-- <img src=\"{{ user?.picture.data.url }}\"><span>{{ user?.email }}</span> -->\n    <span class=\"user\" [hidden]=\"!fullName\">Hey, {{fullName}}</span>&nbsp;\n    <!-- <span class=\"material-icons\" [hidden]=\"!fullName\">notifications </span> -->\n    <button mat-raised-button class=\"btn btn-secondary\" (click)=\"logout()\" [hidden]=\"!fullName\">Logout</button>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule ,ReactiveFormsModule}   from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt'\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider, FacebookLoginProvider } from \"angularx-social-login\";\nimport { SocketioService } from './socketio.service';\n \n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { RequestResetComponent } from './request-reset/request-reset.component';\nimport { ResponseResetComponent } from './response-reset/response-reset.component';\nimport { GroupNewComponent } from './group-new/group-new.component';\nimport { GroupEditComponent } from './group-edit/group-edit.component';\nimport { GroupDescComponent } from './group-desc/group-desc.component';\nimport { ExpenseNewComponent } from './expense-new/expense-new.component';\nimport { ExpenseHistoryComponent } from './expense-history/expense-history.component';\nimport { ExpenseDescComponent } from './expense-desc/expense-desc.component';\n\nimport { AuthService }from './auth/auth.service'\nimport { TokenInterceptor } from './auth/token.interceptor';\n\n\nconst appRoutes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent  },\n  { path: 'dashboard', component: DashboardComponent  },\n  { path: 'request-reset-password', component: RequestResetComponent  },\n  { path: 'response-reset-password/:token', component: ResponseResetComponent  },\n  { path: '',redirectTo: '/login',pathMatch: 'full' },\n  { path: 'group-new', component: GroupNewComponent  },\n  { path: 'group-edit/:groupId', component: GroupEditComponent  },\n  { path: 'group/:groupId', component: GroupDescComponent  },\n  { path: 'expense-new', component: ExpenseNewComponent  },\n  { path: 'expense/:expenseId', component: ExpenseDescComponent  },\n  { path: 'expense-history', component: ExpenseHistoryComponent  },\n  { path: '**', component: LoginComponent }\n];\n// Configs \nconst config = new AuthServiceConfig(\n  [\n    {\n      id: FacebookLoginProvider.PROVIDER_ID,\n      provider: new FacebookLoginProvider(\"192608161695474\")\n    },\n    // {\n    //   id: GoogleLoginProvider.PROVIDER_ID,\n    //   provider: new GoogleLoginProvider(\"Your-Google-Client-Id\")\n    // }\n  ]);\nexport function provideConfig() {\nreturn config;\n}\nexport function tokenGetter() {\n  return localStorage.getItem('token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    RequestResetComponent,\n    ResponseResetComponent,\n    GroupNewComponent,\n    GroupDescComponent,\n    ExpenseNewComponent,\n    ExpenseHistoryComponent,\n    ExpenseDescComponent,\n    GroupEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SocialLoginModule,\n    MatFormFieldModule,MatInputModule,MatSelectModule,MatCardModule,MatDividerModule,MatTableModule,MatPaginatorModule,MatSortModule,MatIconModule,MatTooltipModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    ),\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(), // ToastrModule added\n    JwtModule.forRoot({\n      config: {\n        tokenGetter:tokenGetter,\n        whitelistedDomains: ['http://localhost:4200/','http://52.66.252.216:3000']\n      }\n    })\n  ],\n  providers: [ {provide: AuthServiceConfig,useFactory: provideConfig},\n    AuthService,\n    {provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\nimport { Observable,throwError, of } from 'rxjs';\nimport { map ,catchError} from \"rxjs/operators\";\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  //private url =  'https://chatapi.edwisor.com';\n  private url =  environment.SOCKET_ENDPOINT\n\n  constructor(\n    private http: HttpClient,\n    private toastr: ToastrService,\n  ) {} \n  getUserInfoFromLocalstorage = () => {\n    return JSON.parse(localStorage.getItem('userInfo'));\n  } \n  setUserInfoInLocalStorage = (data) =>{\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n  getTokenFromLocalstorage = () => {\n    return JSON.parse(localStorage.getItem('authtoken'));\n  } \n  setTokenInLocalStorage = (data) =>{\n    localStorage.setItem('token', JSON.stringify(data));\n  }\n\n  fullNameSource = new BehaviorSubject<string>('');\n  fullName = this.fullNameSource.asObservable()\n\n\n  signupFunction(formdata): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/users/signup`, formdata);\n  } \n\n  signinFunction(formdata): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/users/login`, formdata);\n  } \n\n  logout(userId): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/users/${userId}/delete`,userId);\n  } \n\n  requestReset(body): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/users/req-reset-password`, body);\n  }\n\n  newPassword(body): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/users/new-password`, body);\n  }\n\n  ValidPasswordToken(body): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/users/valid-password-token`, body);\n  }\n\n  getAllUsers(): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/users/all`)\n    .pipe(map((response:any) =>{\n        return response;\n    }),catchError(<T>(error: any, result?: T) => {\n      console.log(error);\n      return this.handleError(error)\n    }))\n  } \n\n  //GROUPS\n  createGroup(formdata): Observable<any> {\n      return this.http.post(`${this.url}/api/v1/groups/create`, formdata);\n  } \n\n  getAllGroups(userId): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/groups/${userId}/all`)\n    .pipe(map((response:any) =>{\n        return response;\n    }),catchError(<T>(error: any, result?: T) => {\n      console.log(error);\n      return this.handleError(error)\n    }))\n  } \n\n  getGroupById(groupId): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/groups/view/${groupId}`);\n  }  \n\n  editGroup(data): Observable<any> {\n    return this.http.put(`${this.url}/api/v1/groups/${data['groupId']}/edit`, data);\n  } \n\n  deleteGroup(groupId): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/groups/${groupId}/delete`,groupId);\n  } \n\n  //EXPENSES\n  createExpense(formdata): Observable<any> {\n      return this.http.post(`${this.url}/api/v1/expenses/create`, formdata);\n  } \n\n  getAllExpenses(groupId,page,numberOfExpensePerPage): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/expenses/${groupId}/all?page=${page}&numberOfExpensePerPage=${numberOfExpensePerPage}`)\n    .pipe(map((response:any) =>{\n        return response;\n    }),catchError(<T>(error: any, result?: T) => {\n      console.log(error);\n      return this.handleError(error)\n    }))\n  } \n\n  getExpenseById(expenseId): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/expenses/view/${expenseId}`);\n  }  \n\n  editExpense(data): Observable<any> {\n    return this.http.put(`${this.url}/api/v1/expenses/${data['expenseId']}/edit`, data);\n  } \n\n  deleteExpense(expenseId): Observable<any> {\n    return this.http.post(`${this.url}/api/v1/expenses/${expenseId}/delete`,expenseId);\n  } \n\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    this.toastr.error(err.message);\n    return throwError(errorMessage);\n\n  }  // END handleError\n\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class AuthService {\n  constructor(private http: HttpClient, private jwtHelperService: JwtHelperService) {}\n\n  loggedIn() {\n    const token: string = this.jwtHelperService.tokenGetter()\n    if (!token) {\n      return false\n    }\n  const tokenExpired: boolean = this.jwtHelperService.isTokenExpired(token)\n    return !tokenExpired\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { AuthService } from './auth.service';\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService,public jwtHelperService :JwtHelperService) {}\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `${this.jwtHelperService.tokenGetter()}`\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  isGroupList=false;\n  groupList=[];\n  yourShareArray=[];\n  currentUserId;\n  constructor(private router: Router,\n    private appService: AppService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.getAllGroups()\n    this.currentUserId=this.appService.getUserInfoFromLocalstorage().userId;\n  }\n  \n  getAllGroups(){\n    let userId= this.appService.getUserInfoFromLocalstorage().userId\n    this.appService.getAllGroups(userId).subscribe( (res) =>{\n      //console.log('res',res);\n      if(!res.error){\n      this.isGroupList=true;\n      this.groupList=res.data;\n      this.yourShareArray=[];\n      this.groupList.forEach(element => {\n        this.getAllExpensesforYourShare(element.groupId,element.groupName);\n      });\n      console.log(this.yourShareArray);\n      }\n      else{\n        this.isGroupList=false;\n        console.log(res.message)\n        }\n      },(error)=>{\n        this.isGroupList=false;\n        console.log('error',error);\n      })\n  }\n\n  goTonewGroup(){\n    this.router.navigate(['/group-new']);\n  }\n\n  removeGroup(groupId,$event:Event){\n    $event.stopPropagation();\n    this.appService.deleteGroup(groupId).subscribe( (res) =>{\n      console.log(res);\n      this.getAllGroups()\n    })\n  }\n\n  editGroup(groupId){\n    this.router.navigate(['/group',groupId]);\n  }\n\n  getAllExpensesforYourShare(groupId,groupName){\n    this.appService.getAllExpenses(groupId,0,0).subscribe( (res) =>{\n      if(!res.error){\n        console.log(res.data);\n        let netBalance=0;\n        res.data.expenseList.forEach(element => {\n          let currentUserId=element.expenseMembers.filter(el =>el.userId==this.currentUserId);\n          if(currentUserId.length>0)\n          netBalance=netBalance+(currentUserId['0'].paidShare-currentUserId['0'].owedShare)\n        });\n        \n        let text= `you ${netBalance>0?'get back':'owe'}`\n        let share= netBalance==0?`nothing`:Math.abs(netBalance).toFixed(2);\n        let yourShare=`${text} <b>Rs.${share}</b> for Group <b>${groupName}</b> which has <span style=\"color: #666;\">${res.data.count} expense(s)</span>`;\n        console.log(yourShare);\n        this.yourShareArray.push(yourShare);\n      }\n      else{\n        let yourShare=`${res.message} for Group <b>${groupName}</b></span>`;\n        this.yourShareArray.push(yourShare);\n       //this.toastr.error(res.message)\n      }\n    },(error)=>{\n      console.log('error',error);\n    })\n  }\n\n}\n","<div class=\"dashboard-page\">\n<div class=\"group-section\">\n    <div class=\"groupTitle\"> \n        <span>GROUPS  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>\n        <span class=\"addGroupBtn\" (click)=\"goTonewGroup()\"><b>+ Add</b></span>\n    </div>\n    <div *ngIf=\"isGroupList\">\n        <span *ngFor=\"let element of this.groupList; let lastItem = last;\">\n            <li (click)=\"editGroup(element.groupId)\"><i class=\"material-icons groupIcon\"> bookmark</i>\n                <a class=\"groupName\">{{element.groupName}} </a>&nbsp;\n            <i class=\"material-icons deleteGroupIcon\" (click)=\"removeGroup(element.groupId,$event)\">cancel </i>\n            </li>\n        </span>\n    </div>\n    <div *ngIf=\"!isGroupList\" class=\"noGroupList\">\n        <p>No Groups Found</p>\n        <p>Add one !</p>\n    </div>\n</div>\n<div class=\"your-share-section\" *ngIf=\"yourShareArray.length>0\" >\n    <div class=\"groupTitle\"> \n        <span>YOUR SHARE IN GROUPS </span>\n    </div>\n    <div *ngFor=\"let element of yourShareArray\" class=\"yourShareArray\">\n        <span class=\"material-icons card-icon\">\n            credit_card\n        </span>\n        <span [innerHTML]=\"element\"></span>\n        <hr>\n    </div>\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-desc',\n  templateUrl: './expense-desc.component.html',\n  styleUrls: ['./expense-desc.component.css']\n})\nexport class ExpenseDescComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expense-desc works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-history',\n  templateUrl: './expense-history.component.html',\n  styleUrls: ['./expense-history.component.css']\n})\nexport class ExpenseHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expense-history works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-new',\n  templateUrl: './expense-new.component.html',\n  styleUrls: ['./expense-new.component.css']\n})\nexport class ExpenseNewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>expense-new works!</p>\n","import { Component, OnInit, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SocketioService } from '../socketio.service';\n//declare var jQuery:any;\n\n@Component({\n  selector: 'app-group-desc',\n  templateUrl: './group-desc.component.html',\n  styleUrls: ['./group-desc.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GroupDescComponent implements OnInit {\n  isGroupList=false;\n  groupList=[];\n  addEditLabel:String;\n  currentUserId;\n  currentUserName;\n  createGroupForm:FormGroup;\n  group;\n  createExpenseForm:FormGroup;\n  expense;\n  expenseList=[];\n  expenseListGroupBalance=[];\n  expenseMembers=[];\n  expenseHistory=[];\n  displayMultiplePayer:boolean;\n  displayPayer;\n  splitOption:string;\n  splitOptionSelected:string;\n  isExpenseChanged:boolean;\n  expenseInitial;\n  expenseMembersInitial;\n  expenseHistoryNotes=[];\n  page=1;\n  countExpense;\n  numberOfExpensePerPage=2;\n  lastPage;\n\n  @ViewChild('closeBtnAddExpense') closeBtn: ElementRef;\n\n  constructor( private appService: AppService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router,\n    private route:ActivatedRoute,\n    private socketService:SocketioService) { \n      this.resetForm()\n      this.getAllGroups()\n    }\n\n  ngOnInit(): void {\n          //get group\n          this.currentUserId=this.appService.getUserInfoFromLocalstorage().userId;\n          this.currentUserName=this.appService.getUserInfoFromLocalstorage().fullName;\n          this.route.params.subscribe(params =>{\n            //console.log(params.groupId);\n              this.appService.getGroupById(params.groupId).subscribe( (res) =>{\n                if(!res.error){\n                this.group=res.data;\n                //console.log(res.data);\n                //console.log(this.group.groupMembers);\n                this.expenseMembers=this.group.groupMembers;\n                this.getAllExpenses();\n                }\n                else{\n                 this.toastr.error(res.message)\n                }\n              },(error)=>{\n                console.log('error',error);\n              })\n            })\n  }\n\n\n  resetForm(){\n    this.createExpenseForm = this.fb.group({\n      expenseName:['',Validators.required],\n      expenseMembers:[[]],\n      amount:[0.00],\n      splitOption:['equal'],\n      groupId:[''],\n      expenseOn:[null],\n      addedOn:[null],\n      addedBy:[null],\n      deletedOn:[null],\n      deletedBy:[null],\n      updatedOn:[null],\n      updatedBy:[null],\n      expenseHistory:[[]]\n    })\n  }\n\n  resetExpense(){\n    this.resetForm()\n    //set default payer\n    this.addSinglePayer(this.currentUserId);\n    //initially split equally and split share to all group members\n    this.splitOption='equal';\n    this.splitOptionSelected='equal';\n    this.expenseMembers.forEach(element => {\n      element.isOwer=true;\n    });\n  }\n\n  createExpense(){\n    let amountFilled =this.createExpenseForm.value.amount\n    let expenseName =this.createExpenseForm.value.expenseName\n    //if single payer, add paidShare \n    let isSolePayer= this.expenseMembers.filter(element => element.isSolePayer==true)\n    if(isSolePayer.length==1){\n      this.expenseMembers.forEach(element => {\n        element.paidShare=element.isSolePayer?amountFilled:0;\n      })\n    }\n    //check if total cost is same as paid share and owed share\n    let paidAmount = this.expenseMembers.reduce((total, element) => total + element.paidShare, 0);\n    let owedAmount = this.expenseMembers.reduce((total, element) => total + element.owedShare, 0);\n    //console.log(paidAmount);\n    //console.log(owedAmount);\n    if(expenseName==''){\n      this.toastr.error(`You must enter Expense Name` )\n    }\n    else if(amountFilled==0){\n      this.toastr.error(`You must enter an amount.` )\n    }\n    else if(paidAmount!==amountFilled)\n    {\n      this.toastr.error(`The total of everyone's paid share (Rs.${paidAmount}) is different than total cost (Rs.${amountFilled})` )\n    }\n    else if(owedAmount!==amountFilled)\n    {\n      this.toastr.error(`The total of everyone's owed share (Rs.${owedAmount}) is different than total cost (Rs.${amountFilled})` )\n    }\n    else if(this.addEditLabel=='Add'){\n      //console.log(this.expenseMembers)\n      //console.log(this.createExpenseForm.value)\n      let expenseFormValue=this.createExpenseForm.value;\n      let expenseHistoryNotesBy=`${this.currentUserName} created expense '${expenseFormValue.expenseName}' for group ${this.group.groupName}`;\n      let expenseHistoryObj ={\n        expenseHistoryNotesBy:expenseHistoryNotesBy\n      }\n      let expenseHistory=[]\n      expenseHistory.push(expenseHistoryObj);\n      \n      let data = {\n        expenseName: expenseFormValue.expenseName,\n        amount: expenseFormValue.amount,\n        splitOption: this.splitOption,\n        groupId: this.group.groupId,\n        addedOn: Date.now(),\n        addedBy: this.currentUserName,\n        expenseMembers: this.expenseMembers,\n        expenseHistory: expenseHistory\n      }\n      console.log(data);\n      this.appService.createExpense(data)\n      .subscribe((res) => {\n        console.log(res);\n        if (!res.error) {\n          this.resetForm();\n          //close addexpense modal\n          //jQuery(\"#myModal\").modal(\"hide\");\n          this.closeBtn.nativeElement.click();\n          this.toastr.success('Expense Added');\n          //so that when a new expense is added it goes to new page\n          if(this.expenseList.length==this.numberOfExpensePerPage)\n          this.page=this.page+1\n          this.getAllExpenses();\n          this.notify(this.expenseMembers,expenseHistoryObj);\n          this.expenseHistoryNotes=[]\n        } else {\n          this.toastr.error(res.message);\n        }\n      }, (error) => {\n        console.log('error',error);\n      });\n    }\n    else if(this.addEditLabel=='Edit'){\n      //console.log(this.expenseMembers)\n      //console.log(this.createExpenseForm.value)\n      this.onFormChanges()\n      let expenseHistoryNotesBy=`${this.currentUserName} updated expense '${this.createExpenseForm.value.expenseName}' for group ${this.group.groupName}`;\n      let expenseHistoryObj ={\n        expenseHistoryNotesBy:expenseHistoryNotesBy,\n        expenseHistoryNotes:this.expenseHistoryNotes\n      }\n      console.log('expenseHistoryNotes',this.expenseHistoryNotes);\n      this.expense.expenseHistory.push(expenseHistoryObj);\n\n      let expenseFormValue=this.createExpenseForm.value;\n\n      let data = {\n        expenseId: this.expense.expenseId,\n        expenseName: expenseFormValue.expenseName,\n        amount: expenseFormValue.amount,\n        splitOption: this.splitOption,\n        groupId:this.group.groupId,\n        updatedOn: Date.now(),\n        updatedBy: this.currentUserName,\n        expenseMembers: this.expenseMembers,\n        expenseHistory:this.expense.expenseHistory\n      }\n\n      console.log(data);\n      this.appService.editExpense(data)\n      .subscribe((res) => {\n        console.log(res);\n        if (!res.error) {\n          this.resetForm();\n          this.closeBtn.nativeElement.click();\n          this.toastr.success('Expense Edited');\n          this.getAllExpenses();\n          this.notify(this.expenseMembers,expenseHistoryObj)\n          this.expenseHistoryNotes=[]\n        } else {\n          this.toastr.error(res.message);\n        }\n      }, (error) => {\n        console.log('error',error);\n      });\n\n    }\n  }\n\n  onFormChanges(){\n    let expenseFormValue=this.createExpenseForm.value;\n    //let expenseHistoryNotes=[];\n    if(this.expenseInitial.expenseName!==expenseFormValue.expenseName)\n    this.expenseHistoryNotes.push(`Expense Name changed from '${this.expenseInitial.expenseName}' to '${expenseFormValue.expenseName}'`)\n    if(this.expenseInitial.amount!==expenseFormValue.amount)\n    this.expenseHistoryNotes.push(`Cost changed from ${this.expenseInitial.amount} to ${expenseFormValue.amount}`)\n    //compare expense members \n    //console.log('expenseMembersInitial',JSON.parse(this.expenseMembersInitial));\n    let isSolePayer=this.expenseMembers.filter(element =>element.isSolePayer==true);\n    let isSolePayerInitial=JSON.parse(this.expenseMembersInitial).filter(element =>element.isSolePayer==true);\n\n    //if payshare changed\n    let ispaidShareChanged=false;\n    JSON.parse(this.expenseMembersInitial).forEach((element) => {\n      let expenseObj=this.expenseMembers.filter(value=>value.userId==element.userId)\n      if(expenseObj.length>0){\n        if(expenseObj['0'].paidShare!==element.paidShare)\n        {ispaidShareChanged=true; }\n      }\n    });\n    if(isSolePayer.length>0 && isSolePayerInitial.length>0)\n    {\n      if(isSolePayer['0'].userId!==isSolePayerInitial['0'].userId){\n        this.expenseHistoryNotes.push(`Payer changed from ${isSolePayerInitial['0'].fullName} to ${isSolePayer['0'].fullName}`);\n      }\n    }\n    else if(ispaidShareChanged){\n      let payshareText='Payer changed from ';\n      JSON.parse(this.expenseMembersInitial).forEach((element,index) => {\n        if(element.paidShare!=0)\n        payshareText=payshareText+`${index==JSON.parse(this.expenseMembersInitial).length-1?'and':(index==0?'':',')} ${element.firstName}(Rs.${element.paidShare})`\n        });\n      payshareText=payshareText+' to ';\n      this.expenseMembers.forEach((element,index) => {\n        if(element.paidShare!=0)\n        payshareText=payshareText+`${element.firstName}(Rs.${element.paidShare.toFixed(2)})${index==this.expenseInitial.length-1?'and':','}`\n      });\n      this.expenseHistoryNotes.push(payshareText);\n    }\n    \n\n    JSON.parse(this.expenseMembersInitial).forEach((element) => {\n      //find current expense member\n      let expenseObj=this.expenseMembers.filter(value=>value.userId==element.userId)\n      if(expenseObj.length>0){\n      if(expenseObj['0'].owedShare!==element.owedShare)\n      this.expenseHistoryNotes.push(`${element.fullName} share changed from Rs.${element.owedShare.toFixed(2)} to Rs.${expenseObj['0'].owedShare.toFixed(2)}`);\n      }\n  });\n    \n  }\n\n  getAllExpenses(){\n    this.appService.getAllExpenses(this.group.groupId,this.page,this.numberOfExpensePerPage).subscribe( (res) =>{\n      if(!res.error){\n      console.log(res.data);\n      this.expenseList=res.data.expenseList;\n      //change here\n      this.countExpense=res.data.count\n      this.getAllExpensesForGroupBalance();\n      this.lastPage=Math.ceil(res.data.count/this.numberOfExpensePerPage);\n      }\n      else{\n        this.countExpense=0;\n        this.expenseList=[];\n      }\n    },(error)=>{\n      this.countExpense=0;\n      this.expenseList=[];\n    })\n  }\n\n  getAllExpensesForGroupBalance(){\n    this.appService.getAllExpenses(this.group.groupId,1,this.countExpense).subscribe( (res) =>{\n      if(!res.error){\n      console.log(res.data);\n      this.expenseListGroupBalance=res.data.expenseList;\n      }\n      else{\n        console.log('error');\n      }\n    },(error)=>{\n      console.log('error',error);\n    })\n  }\n\n  getExpenseById(expenseId){\n    this.appService.getExpenseById(expenseId).subscribe( (res) =>{\n      if(!res.error){\n      console.log('->',res.data.expenseMembers);\n      this.expense=res.data;\n      this.expenseInitial= res.data;\n      this.expenseMembersInitial=JSON.stringify(res.data.expenseMembers);\n      this.setFormValue();\n      }\n      else{\n       this.toastr.error(res.message)\n      }\n    },(error)=>{\n      console.log('error',error);\n    })\n  }\n\n  setFormValue(){\n      this.expenseMembers=this.expense.expenseMembers;\n      this.createExpenseForm.get('expenseName').setValue(this.expense.expenseName);\n      this.createExpenseForm.get('amount').setValue(this.expense.amount);\n      this.createExpenseForm.get('expenseMembers').setValue(this.expense.expenseMembers);\n      //console.log('splitOption',this.expense.splitOption);\n      this.splitOption=this.expense.splitOption;\n      this.splitOptionSelected=this.expense.splitOption;\n      if(this.splitOption=='equal'){\n        this.splitShareEqually()\n      }\n      this.setDisplayPayer();\n  }\n\n  deleteExpense(expense){\n    this.appService.deleteExpense(expense.expenseId).subscribe( (res) =>{\n      console.log(res);\n      //so that when a expense is deleted and thats last expense on that page ,page number should decrease\n      if(this.expenseList.length==1 && this.page!==1)\n      this.page=this.page-1;\n      this.getAllExpenses();\n\n      let expenseHistoryNotesBy=`${this.currentUserName} deleted expense '${expense.expenseName}' from group ${this.group.groupName}`;\n      let expenseHistoryObj ={\n        expenseHistoryNotesBy:expenseHistoryNotesBy\n      }\n      let expenseHistory=[]\n      //expenseHistory.push(expenseHistoryObj);\n      this.notify(expense.expenseMembers,expenseHistoryObj)\n    })\n  }\n\n\n  setDisplayPayer(){\n      let isSolePayer=this.expenseMembers.filter(function (value) {\n        return value.isSolePayer == true;\n      });\n      if(isSolePayer.length>0){\n        this.displayPayer=isSolePayer['0'].fullName==this.currentUserName?'you':isSolePayer['0'].fullName\n      }\n      let isMultiplePayer=this.expenseMembers.filter(function (value) {\n        return value.isMultiplePayer == true;\n      });\n      if(isMultiplePayer.length>0){\n        //this.displayMultiplePayer=true\n        this.displayPayer='multiple people'\n      }\n  }\n\n\n  addSinglePayer(userId){\n    this.isExpenseChanged=true;\n    //console.log(userId)\n    //this.displayMultiplePayer=false;\n    let displayPayerObj= this.expenseMembers.filter(element => element.userId==userId)\n    if(displayPayerObj.length>0)\n    this.displayPayer=displayPayerObj['0'].userId==this.currentUserId?'you':displayPayerObj['0'].fullName;\n\n    this.expenseMembers.forEach(element => {\n      element.isMultiplePayer=false;\n      if(element.userId==userId)\n      {\n        element.isSolePayer=true;\n        element.paidShare=this.createExpenseForm.value.amount;\n      }\n      else{\n        element.isSolePayer=false;\n        element.paidShare=0.00;\n      }\n    });\n  }\n\n  addMultiplePayer(){\n    let multiplePayer= this.expenseMembers.filter(element => element.paidShare>0)\n    if(multiplePayer.length>1){\n      this.isExpenseChanged=true;\n      this.displayPayer= 'multiple people'\n      this.expenseMembers.forEach(element => {\n        {\n          element.isSolePayer=false;\n          element.isMultiplePayer=true;\n        }\n      });\n    }else if(multiplePayer.length==1){\n      this.addSinglePayer(multiplePayer['0'].userId)\n    }\n  }\n\n  saveSplitOption(){\n    this.splitOption=this.splitOptionSelected\n    this.isExpenseChanged=true;\n    if(this.splitOption=='equal')\n    this.splitShareEqually();\n  }\n  \n\n  calculateOwedShare(element){\n    let noOfSplitMembers=this.expenseMembers.filter(element =>element.isOwer==true).length;\n    element.owedShare=element.isOwer?this.createExpenseForm.value.amount/noOfSplitMembers:0;\n    return element.isOwer?(this.createExpenseForm.value.amount/noOfSplitMembers).toFixed(2):0;\n  }\n\n  calculateOwedSharePercentage(element){\n    element.owedShare=element.owedPercentageShare?element.owedPercentageShare/100*this.createExpenseForm.value.amount:0;\n    return element.owedShare.toFixed(2);\n  }\n\n  removeExpenseMember(userId){\n    this.isExpenseChanged=true;\n    var filteredName = this.expenseMembers.filter(value=> value.userId == userId)['0'].fullName;\n    var filtered = this.expenseMembers.filter(function(value){ return value.userId !== userId});\n    if(filtered.length>0){\n      //if thats the sole payer, change it and add 1st element of array\n      let isSolePayer=this.expenseMembers.filter(value=>value.isSolePayer==true);\n        if(isSolePayer.length==1)\n          {\n            if(isSolePayer['0'].fullName==filteredName)\n            this.addSinglePayer(filtered['0'].userId)\n          }\n      this.expenseMembers=filtered;\n      this.expenseHistoryNotes.push(`${filteredName} is removed from Expense`);\n    }else{\n      this.toastr.error(`Expense should have atleast One Member.Either Add another member before removing the last one.` )\n    }\n  }\n\n  addExpenseMember(userId){\n    this.isExpenseChanged=true;\n    let filtered = this.group.groupMembers.filter(function (value) {\n      return value.userId == userId;\n    });\n    var selectedItemExist=false;\n    this.expenseMembers.forEach(element => {\n      if(element.userId==userId)\n      selectedItemExist=true;\n    });\n    if(!selectedItemExist){\n      this.expenseMembers.push(filtered['0'])  \n      this.expenseHistoryNotes.push(`${filtered['0'].fullName} is added in Expense`);\n      if(this.splitOption=='equal')\n      this.splitShareEqually()\n    }\n  }\n\n  splitShareEqually(){\n    this.expenseMembers.forEach(element => {\n      element.isOwer=true;\n      element.owedPercentageShare='';\n    });\n  }\n\n  expensePayerText(expense){\n   let isMultiplePayer = expense.expenseMembers['0'].isMultiplePayer;\n   if(isMultiplePayer){\n    let noOfPayers=expense.expenseMembers.filter(value=>value.paidShare>0).length;\n    return `${noOfPayers} people paid`\n   }\n   else{\n    let isSolePayer=expense.expenseMembers.filter(value=>value.isSolePayer==true)\n    if(isSolePayer.length>0){\n      let payer=isSolePayer['0'].fullName;\n    return `${payer} paid`\n    }\n   }\n  }\n\n  yourShareText(expense){\n    var isMultiplePayer = expense.expenseMembers['0'].isMultiplePayer;\n    if(isMultiplePayer){\n      let yourExpense= expense.expenseMembers.filter(value=>value.userId==this.currentUserId);\n      let netBalance=yourExpense['0'].paidShare-yourExpense['0'].owedShare;\n      return `you ${netBalance>0?'lent':'borrowed'}`\n    }else{\n      var isSolePayer=expense.expenseMembers.filter(value=>value.isSolePayer==true);\n      if(isSolePayer.length>0){\n        return isSolePayer['0'].userId==this.currentUserId?'you lent':isSolePayer['0'].fullName+' lent you';\n      }\n    }\n  }\n\n  yourShare(expense){\n    let isCurrentUserExpense=expense.expenseMembers.filter(value=>value.userId==this.currentUserId);\n    if(isCurrentUserExpense.length>0){\n      let netBalance=isCurrentUserExpense['0'].paidShare-isCurrentUserExpense['0'].owedShare;\n    return netBalance==0?`nothing`:Math.abs(netBalance).toFixed(2);\n    }else{\n      return 0;\n    }\n  }\n\n  isUserInvolved(expense){\n    let isCurrentUserExpense=expense.expenseMembers.filter(value=>value.userId==this.currentUserId);\n    return isCurrentUserExpense.length>0?true:false;\n  }\n\n  getAllGroups(){\n    let userId= this.appService.getUserInfoFromLocalstorage().userId\n    this.appService.getAllGroups(userId).subscribe( (res) =>{\n      //console.log('res',res);\n      if(!res.error){\n      this.isGroupList=true;\n      this.groupList=res.data;\n      }\n      else{\n        this.isGroupList=false;\n        this.toastr.error(res.message)\n        }\n      },(error)=>{\n        this.isGroupList=false;\n        console.log('error',error);\n      })\n  }\n\n  goTonewGroup(){\n    this.router.navigate(['/group-new']);\n  }\n\n  removeGroup(groupId,$event:Event){\n    $event.stopPropagation();\n    this.appService.deleteGroup(groupId).subscribe( (res) =>{\n      console.log(res);\n      this.getAllGroups()\n    })\n  }\n\n  editGroup(groupId){\n    this.page=1;\n    this.router.navigate(['/group',groupId]);\n  }\n\n  calculateBalance(groupMember){\n    let paidAmount=0;\n    let owedAmount=0\n    this.expenseListGroupBalance.forEach(element => {\n       let member=element.expenseMembers.filter(value=>value.userId==groupMember.userId);\n        if(member.length>0)\n        {paidAmount=paidAmount+member['0'].paidShare\n         owedAmount=owedAmount+member['0'].owedShare\n        }\n    });\n    let netBalance=paidAmount-owedAmount\n    return  netBalance>0?`gets back Rs.${netBalance.toFixed(2)}`:`owes Rs.${Math.abs(netBalance).toFixed(2)} `;\n  }\n\n  notify(expenseMembers,expenseHistoryObj){\n    let notification={}\n    notification['expenseMembers']=expenseMembers;\n    notification['expenseHistoryObj']=expenseHistoryObj;\n    notification['groupId']=this.group.groupId;\n    console.log('sendnotification',notification);\n    this.socketService.socket.emit('sendnotification', notification);\n  }\n  \n\n}\n","<div class=\"group-desc-page\">\n<div class=\"group-section\">\n    <div class=\"groupTitle\"> \n        <span>GROUPS  &nbsp;&nbsp;&nbsp;&nbsp; </span>\n        <span class=\"addGroupBtn\" (click)=\"goTonewGroup()\"><b>+ Add</b></span>&nbsp;&nbsp;&nbsp;&nbsp;\n        <!-- <span class=\"addGroupBtn\" [routerLink]=\"['/group-edit',group?.groupId]\" ><b>Edit </b></span> -->\n    </div>\n    <div *ngIf=\"isGroupList\">\n    <span *ngFor=\"let element of this.groupList; let lastItem = last;\">\n        <li (click)=\"editGroup(element.groupId)\"><i class=\"material-icons groupIcon\"> bookmark</i>\n        <a class=\"groupName\" title=\"{{element.groupName}}\">{{element.groupName}} </a>&nbsp;\n        <!-- <i class=\"material-icons deleteGroupIcon\"  (click)=\"removeGroup(element.groupId,$event);\">cancel </i> -->\n        </li>\n    </span>\n    </div>\n</div>\n\n<div class=\"expense-section\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div class=\"flex-spacebetween\">\n                <h5 class=\"card-title\">{{group?.groupName}}</h5>\n                <div>\n                <button [routerLink]=\"['/dashboard']\" type=\"button\" \n                    class=\"btn btn-secondary\">Go to Dashboard</button> &nbsp;\n                <button type=\"button\" \n                    class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#AddExpense\" \n                    (click)=\"addEditLabel='Add';resetExpense()\">Add Expense</button> &nbsp;\n                </div>\n            </div>\n            <div *ngIf=\"countExpense>0\" class=\"card-text\">\n                <div *ngFor=\"let expense of expenseList\">\n                    <div class=\"expenseUnxpanded\" (click)=\"expense.isExpand=!expense.isExpand\">\n                    <div class=\"expListFlex\">\n                        <div>\n                            <span class=\"material-icons\">\n                                rate_review\n                            </span>\n                            <span class=\"expListName\">{{expense?.expenseName}}</span>\n                        </div>\n                        <span class=\"deleteExpense\"><i class=\"material-icons\" (click)=\"deleteExpense(expense)\">cancel </i></span>\n                    </div>\n                    <div class=\"expListExpMembers\">\n                        <div class=\"expenseShare\">\n                        <p>{{expensePayerText(expense)}} \n                            <b>Rs.{{expense.amount |number:'1.0-2'}}</b>\n                        </p> \n                        <p *ngIf=\"isUserInvolved(expense)\">{{yourShareText(expense)}} \n                            <b *ngIf=\"yourShare(expense)!=='nothing'\">Rs.{{yourShare(expense) |number:'1.0-2'}}</b>\n                            <b *ngIf=\"yourShare(expense)=='nothing'\">{{yourShare(expense)}}</b>\n                        </p> \n                        <p *ngIf=\"!isUserInvolved(expense)\">not involved</p>\n                        </div>\n                    </div>\n                    </div>\n                    <div *ngIf=\"expense.isExpand\" class=\"expenseExpanded\">\n                        <div class=\"expExpandFlex\">\n                                <span class=\"material-icons expExpandIcon\">\n                                    rate_review\n                                </span>\n                            <div>\n                                <p class=\"expDesc expExpandName\">{{expense?.expenseName}}</p>\n                                <p class=\"expDesc expExpandAmount\" *ngIf=\"expense?.amount\"><b>Rs.{{expense.amount}}</b></p>\n                                <p class=\"expDesc expExpandDate\" *ngIf=\"expense?.addedBy && expense?.addedOn\">Added by {{expense?.addedBy}} on {{expense?.addedOn | date}}</p>\n                                <p class=\"expDesc expExpandDate\" *ngIf=\"expense?.updatedBy && expense?.updatedOn\">Updated by {{expense?.updatedBy}} on {{expense?.updatedOn | date}}</p>\n                                <p class=\"expDesc expExpandDate\" *ngIf=\"expense?.expenseOn\">Expense Done on {{expense?.expenseOn | date}}</p>\n                                <button  class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#AddExpense\"\n                                (click)=\"getExpenseById(expense?.expenseId);addEditLabel='Edit'\" >Edit Expense</button>\n                            </div>\n                        </div>\n                     <div class=\"expExpandDetailsFlex\">\n                        <div  class=\"expExpandExpMembers\">\n                            <div  *ngFor=\"let element of expense.expenseMembers\">\n                                <span><b>{{element?.firstName}} </b></span>\n                                <span *ngIf=\"element?.paidShare\">paid <b>Rs.{{element?.paidShare |number:'1.0-2'}}</b> and </span>\n                                <span *ngIf=\"element?.owedShare\">owes <b>Rs.{{element.owedShare |number:'1.0-2'}}</b></span>\n                            </div> \n                        </div>\n                       <div class=\"expExpandHistory\">\n                           <strong *ngIf=\"expense?.expenseHistory?.length>0\">Expense History</strong>\n                           <div *ngFor=\"let element of expense?.expenseHistory\" class=\"expenseHistory\">\n                                <div>{{element.expenseHistoryNotesBy}}</div>\n                                <div *ngFor=\"let el of element.expenseHistoryNotes\">\n                                    -{{el}}\n                                </div>\n                           </div>\n                       </div>\n                    </div> \n                    </div>\n                </div>\n                <!-- Pagination -->\n                <nav aria-label=\"Page navigation\" class=\"paginationNav\" *ngIf=\"lastPage!==1\">\n                    <b class=\"totalExpense\">Total Expense(s) : {{countExpense}}</b>\n                    <ul class=\"pagination\">\n                      <li class=\"page-item\"  [ngClass]=\"{'disable': page==1}\"\n                      (click)=\"page=page-1; getAllExpenses();\">\n                        <a class=\"page-link\" aria-label=\"Previous\">\n                          <span aria-hidden=\"true\">&laquo;</span>\n                          <span class=\"sr-only\" >Previous</span>\n                        </a>\n                      </li>\n                      <li class=\"page-item\" [ngClass]=\"{'active': page==1}\"\n                      (click)=\"page=1; getAllExpenses();\">\n                          <a class=\"page-link\">1</a></li>\n                      <li class=\"page-item\" *ngIf=\"lastPage!==2\" [ngClass]=\"{'active': page>1 && page<lastPage}\">\n                          <a class=\"page-link\">...</a></li>\n                      <li class=\"page-item\" [ngClass]=\"{'active': page==lastPage}\"\n                          (click)=\"page=lastPage; getAllExpenses();\">\n                          <a class=\"page-link\">{{lastPage}}</a></li>\n                      <li class=\"page-item\" [ngClass]=\"{'disable': page==lastPage}\"\n                      (click)=\"page=page+1; getAllExpenses();\">\n                        <a class=\"page-link\" aria-label=\"Next\">\n                          <span aria-hidden=\"true\">&raquo;</span>\n                          <span class=\"sr-only\">Next</span>\n                        </a>\n                      </li>                  \n                    </ul>\n                </nav>\n            </div>\n            <div *ngIf=\"countExpense==0\" class=\"noExpense\">\n                <p>No Expense Found</p>\n                <p>Add one !</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"group-balance-section\">\n    <div>\n        <div class=\"groupTitle\"> \n            <span>GROUP BALANCES (<b>{{group?.groupName}}</b>) </span>\n        </div>\n        <div *ngIf=\"isGroupList\">\n        <span *ngFor=\"let element of this.group?.groupMembers;\">\n            <li><i class=\"material-icons faceIcon\"> face</i> &nbsp;\n                <a class=\"groupMemberName\" (click)=\"editGroup(element.groupId)\"><b>{{element.firstName}} {{element.lastName}}</b>&nbsp; </a>\n                <span *ngIf=\"countExpense>0\">{{calculateBalance(element) }}</span>\n                <span *ngIf=\"countExpense==0\">owes nothing !</span>\n                <hr>\n            </li>\n        </span>\n        </div>\n    </div>\n</div>\n\n     <!-- Choose Add Expense Modal -->\n     <div class=\"modal fade\" id=\"AddExpense\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"AddExpenseLabel\" aria-hidden=\"true\" #AddExpense>\n        <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"AddExpenseLabel\">{{addEditLabel}} Expense</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" #closeBtnAddExpense>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"createExpenseForm\">\n                    <div>\n                    <label>With : </label>\n                    <span *ngFor=\"let element of this.expenseMembers; let lastItem = last;\" class=\"expenseMembers\">\n                        <span class=\"clickable\" >{{element.firstName}} \n                        <i class=\"material-icons deleteExpenseIcon\" (click)=\"removeExpenseMember(element.userId)\">cancel </i></span>\n                    </span>\n                      <br>\n                      <select class=\"form-control\" (change)=\"addExpenseMember(selectedGroupMember.value)\" #selectedGroupMember>\n                        <option >&nbsp;Select Member </option>\n                        <option *ngFor=\"let element of this.group?.groupMembers;\" [value]=\"element.userId\" >&nbsp;{{element.fullName}} </option>\n                      </select>  \n                      <small id=\"addMemberHelp\" class=\"form-text text-muted\">+ Add Expense Member</small> \n                    <hr>\n                    <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"expenseName\" #expenseName aria-describedby=\"expenseNameHelp\" placeholder=\"Restaurant Bill\">\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">Rs.</span>\n                        <input class=\"form-control\" formControlName=\"amount\" type=\"number\" #amount aria-describedby=\"amountHelp\" placeholder=\"0.00\">\n                        </div>\n                    </div>\n                    <label>Paid by \n                        <span class=\"clickable\" data-toggle=\"modal\" data-target=\"#ChoosePayer\">\n                         {{displayPayer}} </span> \n                         and split \n                         <span class=\"clickable\" data-toggle=\"modal\" data-target=\"#SplitOption\">\n                        {{splitOption=='equal'?'equally':'unequally'}}</span>\n                    </label>\n                    </div>\n                    </form>\n                    <button  type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button> &nbsp;\n                    <button class=\"btn btn-primary\" (click)=\"createExpense()\" \n                    [disabled]=\"(createExpenseForm.pristine ||createExpenseForm.invalid) &&!isExpenseChanged\" >Save</button>\n            </div>\n        </div>\n        </div>\n    </div>\n\n    <!-- Choose Payer Modal -->\n    <div class=\"modal fade\" id=\"ChoosePayer\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ChoosePayerLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"ChoosePayerLabel\">Choose Payer</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            </div>\n            <div class=\"modal-body\">\n                <div *ngFor=\"let element of this.expenseMembers;\" (click)=\"addSinglePayer(element.userId)\" class=\"flex-hover\"\n                [ngClass]=\"{'selectedPayer': element.isSolePayer==true}\">\n                    {{element.fullName}} \n                </div>\n                <div class=\"flex-hover\" (click)=\"displayMultiplePayer=!displayMultiplePayer\"\n                [ngClass]=\"{'selectedPayer': this.expenseMembers['0']?.isMultiplePayer==true}\">\n                    Multiple People \n                </div>\n                <div *ngIf=\"displayMultiplePayer\" class=\"bg-grey\">\n                    <div class=\"card-text\" *ngFor=\"let element of this.expenseMembers;\">\n                        <label>{{element.fullName}}</label>\n                            <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\">Rs.</span>\n                            <input type=\"number\" class=\"form-control\"  placeholder=\"0.00\" [(ngModel)]=\"element.paidShare\">\n                            </div>\n                            <br>\n                    </div> \n                    <button  type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button> &nbsp;\n                <button class=\"btn btn-primary\" (click)=\"addMultiplePayer()\" data-dismiss=\"modal\">Save</button>\n                </div>\n            </div>\n        </div>\n        </div>\n    </div>\n\n    <!-- Choose Slit Option Modal -->\n    <div class=\"modal fade\" id=\"SplitOption\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"SplitOptionLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"SplitOptionLabel\">Choose Split Options</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"btn-group btn-group-toggle splitBtn\" data-toggle=\"buttons\">\n                    <label class=\"btn btn-secondary\" [ngClass]=\"{'active': splitOptionSelected=='equal'}\"\n                    data-toggle=\"tooltip\" data-placement=\"top\" title=\"Split equally\" (click)=\"splitOptionSelected='equal'\" >\n                      <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\"  > =\n                    </label>\n                    <label class=\"btn btn-secondary\" [ngClass]=\"{'active': splitOptionSelected=='exactAmount'}\"\n                    data-toggle=\"tooltip\" data-placement=\"top\" title=\"Split by exact amount\" (click)=\"splitOptionSelected='exactAmount'\" >\n                      <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\" > 1.23\n                    </label>\n                    <label class=\"btn btn-secondary\" [ngClass]=\"{'active': splitOptionSelected=='percentage'}\"\n                    data-toggle=\"tooltip\" data-placement=\"top\" title=\"Split by percentages\" (click)=\"splitOptionSelected='percentage'\">\n                      <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\" > %\n                    </label>\n                </div>\n                <div *ngIf=\"splitOptionSelected=='equal'\">\n                <div *ngFor=\"let element of this.expenseMembers;\" class=\"flex-hover\"\n                [ngClass]=\"{'selectedPayer': element.isSolePayer==true}\">\n                    <span>\n                    <input type=\"checkbox\" checked=\"element.isOwer\" [(ngModel)]=\"element.isOwer\" (click)=\"isExpenseChanged=true\"> &nbsp;\n                    <span (click)=\"addSinglePayer(element.userId)\" class=\"\">{{element.fullName}}</span>\n                    </span>\n                    <span class=\"pull-right\">Rs.{{calculateOwedShare(element) |number:'1.0-2'}}</span>\n                </div>\n                </div>\n\n                <div *ngIf=\"splitOptionSelected=='exactAmount'\">\n                <div *ngFor=\"let element of this.expenseMembers;\" class=\"flex-hover\"\n                    [ngClass]=\"{'selectedPayer': element.isSolePayer==true}\">   \n                        <span (click)=\"addSinglePayer(element.userId)\" >{{element.fullName}}</span>\n                        <div class=\"input-group-prepend \">\n                        <span class=\"input-group-text\">Rs.</span>\n                        <input class=\"form-control owedShare\" type=\"number\" placeholder=\"0.00\" \n                        [ngModel]=\"element.owedShare\" \n                        (ngModelChange)=\"element.owedShare=$event\">\n                        </div>\n                </div>\n                </div>\n\n                <div *ngIf=\"splitOptionSelected=='percentage'\">\n                <div *ngFor=\"let element of this.expenseMembers;\" class=\"flex-hover\"\n                    [ngClass]=\"{'selectedPayer': element.isSolePayer==true}\">\n                    <span class=\"name\">\n                        <span (click)=\"addSinglePayer(element.userId)\" class=\"\">{{element.fullName}}</span><br>\n                        <span class=\"owedShareUnequal\">Rs.{{calculateOwedSharePercentage(element) |number:'1.0-2'}}</span>\n                    </span>\n                    <div class=\"input-group-append \">\n                    <input class=\"form-control owedShare\" type=\"number\"  [(ngModel)]=\"element.owedPercentageShare\">\n                    <span class=\"input-group-text\">%</span>\n                    </div>\n                </div>\n                </div><br>\n                <button  type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button> &nbsp;\n                <button class=\"btn btn-primary\" (click)=\"saveSplitOption()\" data-dismiss=\"modal\">Save</button>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-group-edit',\n  templateUrl: './group-edit.component.html',\n  styleUrls: ['./group-edit.component.css']\n})\nexport class GroupEditComponent implements OnInit {\n  isUserList=false;\n  userList=[];\n  selectedGroupMember=[];\n  createGroupForm:FormGroup;\n  group;\n  isGroupMembersChanged:boolean;\n  isGroupEdit:boolean;\n  constructor(private appService: AppService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router,\n    private route:ActivatedRoute) { \n      this.resetForm()\n    }\n\n    ngOnInit(): void {\n      this.getAllUsers()\n      //get group\n      this.route.params.subscribe(params =>{\n        console.log(params.groupId);\n          this.appService.getGroupById(params.groupId).subscribe( (res) =>{\n            //console.log('res',res);\n            if(!res.error){\n            this.setFormValue(res.data);\n            }\n            else{\n             this.toastr.error(res.message)\n            }\n          },(error)=>{\n            console.log('error',error);\n          })\n        })\n}\n\ngetAllUsers(){\n  this.appService.getAllUsers().subscribe( (res) =>{\n    //console.log('res',res);\n    if(!res.error){\n    this.isUserList=true;\n    this.userList=res.data;\n    }\n    else{\n      this.toastr.error(res.message)\n      }\n    },(error)=>{\n      console.log('error',error);\n    })\n}\n\nsetFormValue(res){\n  this.group=res;\n    this.createGroupForm.get('groupName').setValue(res.groupName);\n    res.groupMembers.forEach(element => {\n      this.selectedGroupMember.push(element)\n    });\n}\n\nresetForm(){\n  this.createGroupForm = this.fb.group({\n    groupName:['',Validators.required],\n    groupMembers:[[]],\n  })\n}\n\naddUserToGroup(userId){\n  this.isGroupMembersChanged=true;\n  let filtered = this.userList.filter(function (value) {\n    return value.userId == userId;\n  });\n  var selectedItemExist=false;\n  this.selectedGroupMember.forEach(element => {\n    if(element.userId==userId)\n    selectedItemExist=true;\n  });\n  if(!selectedItemExist)\n  this.selectedGroupMember.push(filtered['0'])  \n}\n\nremoveUserFromGroup(userId){\n  this.isGroupMembersChanged=true;\n  var filtered = this.selectedGroupMember.filter(function(value){ return value.userId !== userId});\n  this.selectedGroupMember=filtered;\n}\n\neditGroup: any = () => {\n  let createGroupFormValue=this.createGroupForm.value;\n    let data = {\n      groupId: this.group.groupId,\n      groupName: createGroupFormValue.groupName,\n      groupMembers: this.selectedGroupMember\n    }\n    console.log(data);\n\n    this.appService.editGroup(data)\n      .subscribe((apiResponse) => {\n        console.log(apiResponse);\n        if (apiResponse.status === 200) {\n          this.toastr.success(`${data.groupName} edited succesfully`);\n          setTimeout(() => {\n            this.router.navigate(['/dashboard']);\n          }, 2000);\n        } else {\n          this.toastr.error(apiResponse.message);\n        }\n      }, (err) => {\n        this.toastr.error('Some error occured');\n      });\n  } // end signupFunction\n\n\n}\n","<div class=\"group-edit-page\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">EDIT GROUP {{group?.groupName}}</h5>\n            <form class=\"card-text\" [formGroup]=\"createGroupForm\">\n                <div class=\"form-group\">\n                  <label for=\"groupName\">My group shall be called…</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"groupName\" #groupName aria-describedby=\"groupNameHelp\">\n                  <small id=\"groupNameHelp\" class=\"form-text text-muted\">Group Name cabe like -Goa Trip, Farwell Party</small>\n                </div>\n                <h5 class=\"card-title\">GROUP MEMBERS</h5>\n                    <span *ngFor=\"let element of this.selectedGroupMember; let lastItem = last;\">\n                      <li>{{element.fullName}} &nbsp;\n                        <i class=\"material-icons close-class\" (click)=\"removeUserFromGroup(element.userId)\">cancel </i></li>\n                    </span>\n\n                    <br>\n                    <select class=\"form-control\" (change)=\"addUserToGroup(userId.value)\" #userId>\n                      <option>&nbsp;Select Group Member </option>\n                      <option *ngFor=\"let element of this.userList;\" [value]=\"element.userId\" >&nbsp;{{element.fullName}} </option>\n                    </select>  \n                    <small id=\"addMemberHelp\" class=\"form-text text-muted\">+ Add a Person to Group</small> \n                <br>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"editGroup()\">Save</button>\n                &nbsp; &nbsp; <button [routerLink]=\"['/dashboard']\" type=\"button\" \n                class=\"btn btn-secondary\">Go to dashboard</button>\n            </form>\n        </div>\n      \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-group-new',\n  templateUrl: './group-new.component.html',\n  styleUrls: ['./group-new.component.css']\n})\nexport class GroupNewComponent implements OnInit {\n  isUserList=false;\n  userList=[];\n  selectedUserList=[];\n  createGroupForm:FormGroup;\n\n  constructor( private appService: AppService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router) { }\n\n  ngOnInit(): void {\n          this.resetForm()\n          //get all users\n          this.getAllUsers()\n         \n  }\n\n  getAllUsers(){\n    this.appService.getAllUsers().subscribe( (res) =>{\n      //console.log('res',res);\n      if(!res.error){\n      this.isUserList=true;\n      this.userList=res.data;\n      //add signedIn user to group by default\n        let userId= this.appService.getUserInfoFromLocalstorage().userId\n        this.addUserToGroup(userId)\n      }\n      else{\n        this.toastr.error(res.message)\n        }\n      },(error)=>{\n        console.log('error',error);\n      })\n  }\n\n  resetForm(){\n    this.createGroupForm = this.fb.group({\n      groupName:['',Validators.required],\n      groupMembers:[[]],\n    })\n  }\n  \n  addUserToGroup(userId){\n    let filtered = this.userList.filter(function (value) {\n      return value.userId == userId;\n    });\n    if(this.selectedUserList.indexOf(filtered['0'])==-1)\n    this.selectedUserList.push(filtered['0'])\n  }\n\n  removeUserFromGroup(userId){\n    var filtered = this.selectedUserList.filter(function(value){ return value.userId !== userId});\n    this.selectedUserList=filtered;\n  }\n\n  createGroup: any = () => {\n    let createGroupFormValue=this.createGroupForm.value;\n      let data = {\n        groupName: createGroupFormValue.groupName,\n        groupMembers: this.selectedUserList\n      }\n      console.log(data);\n\n      this.appService.createGroup(data)\n        .subscribe((apiResponse) => {\n          console.log(apiResponse);\n          if (apiResponse.status === 200) {\n            this.toastr.success(`${data.groupName} created succesfully`);\n            setTimeout(() => {\n              this.router.navigate(['/dashboard']);\n            }, 2000);\n          } else {\n            this.toastr.error(apiResponse.message);\n          }\n        }, (err) => {\n          this.toastr.error('Some error occured');\n        });\n    } // end signupFunction\n}\n","<div class=\"group-new-page\">\n    <div class=\"card\" >\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">START A NEW GROUP</h5>\n            <form class=\"card-text\" [formGroup]=\"createGroupForm\">\n                <div class=\"form-group\">\n                  <label for=\"groupName\">My group shall be called…</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"groupName\" #groupName aria-describedby=\"groupNameHelp\">\n                  <small id=\"groupNameHelp\" class=\"form-text text-muted\">Group Name cabe like -Goa Trip, Farwell Party</small>\n                </div>\n                <h5 class=\"card-title\">GROUP MEMBERS</h5>\n                    <span *ngFor=\"let element of this.selectedUserList; let lastItem = last;\">\n                      <li>{{element.fullName}} &nbsp;\n                        <i class=\"material-icons close-class\" (click)=\"removeUserFromGroup(element.userId)\">cancel </i></li>\n                    </span>\n\n                    <br>\n                    <select class=\"form-control\" (change)=\"addUserToGroup(userId.value)\" #userId>\n                      <option>&nbsp;Select Group Member </option>\n                      <option *ngFor=\"let element of this.userList;\" [value]=\"element.userId\" >&nbsp;{{element.fullName}} </option>\n                    </select>  \n                    <small id=\"addMemberHelp\" class=\"form-text text-muted\">+ Add a Person</small> \n                <br>\n                <button type=\"button\"  [disabled]=\"(createGroupForm.pristine ||createGroupForm.invalid)\" \n                class=\"btn btn-primary\" (click)=\"createGroup()\">Create Group</button>\n            </form>\n        </div>\n      </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AppService } from '../app.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { SocketioService } from '../socketio.service';\nimport { AuthService, SocialUser } from \"angularx-social-login\";\nimport { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  createLoginForm: FormGroup;\n  user: SocialUser;\n  subscription;\n  hide:boolean=true;\n\n  constructor(\n    private appService: AppService,\n    private router: Router,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private socketService:SocketioService,\n    private authService: AuthService\n  ) {\n  }\n  ngOnInit() {\n    console.log('ngoninit');\n    this.resetForm();\n    if(this.appService.getUserInfoFromLocalstorage()){\n      this.router.navigate(['/dashboard']);\n    }\n    //subscribe here \n    this.subscription=this.authService.authState.subscribe((user) => {\n      console.log('here',user);\n      if(user){\n      this.user = user;\n      //this.appService.setTokenInLocalStorage(user.authToken)\n      this.user['fullName']=`${user.name} (${user.email})`\n      this.appService.fullNameSource.next( this.user['fullName'] );\n      this.appService.setUserInfoInLocalStorage(this.user);\n      this.socialSignupFunction(user);\n      this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n\n  resetForm(){\n    this.createLoginForm = this.fb.group({\n      emailOruserName:['',Validators.required],\n      password:['',Validators.required]\n    })\n  }\n\n  goToSignup(){\n    this.router.navigate(['/register']);\n   }\n  \n   \n  signinFunction: any = () => {\n    let loginFormValue=this.createLoginForm.value;\n      let data = {\n        emailOruserName: loginFormValue.emailOruserName,\n        password: loginFormValue.password\n      }\n      this.appService.signinFunction(data)\n        .subscribe((apiResponse) => {\n          if (apiResponse.status === 200) {\n            console.log(apiResponse)\n             this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails)\n             this.appService.setTokenInLocalStorage(apiResponse.data.token)\n             this.appService.fullNameSource.next(apiResponse.data.userDetails.fullName);\n              //socket connection\n              this.socketService.setupSocketConnection({data:'user logged in ,socket established!(Login Component)'});\n              //console.log(this.socketService.socket)\n             this.router.navigate(['/dashboard']);\n          } else {\n            this.toastr.error(apiResponse.message)\n          }\n        }, (err) => {\n          if(err.error.message)\n          this.toastr.error(err.error.message)\n          else\n          this.toastr.error(\"Some error in Login.Try Again !\")\n        });\n    } // end signinFunction\n\n  signInWithGoogle(): void {\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID)\n      .then(function(){\n        console.log('Successful login with google');\n      })\n    }\n   \n  signInWithFB(): void {\n      this.authService.signIn(FacebookLoginProvider.PROVIDER_ID)\n      .then(function(){\n        console.log('Successful login with fb');\n      })\n    } \n  \n    //to register the user in BE, if not registered an to get token\n  socialSignupFunction: any = (user) => {\n    console.log('socialSignupFunction')\n        let data = {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          socialSignup: true\n        }\n        console.log(data);\n  \n        this.appService.signupFunction(data)\n          .subscribe((apiResponse) => {\n            console.log(apiResponse);\n            if (apiResponse.status === 200) {\n              this.appService.setTokenInLocalStorage(apiResponse.data.token);\n              let user=this.appService.getUserInfoFromLocalstorage();\n              user.userId=apiResponse.data.userId;\n              user.socialSignup=true;\n              this.appService.setUserInfoInLocalStorage(user);\n              this.toastr.success('Signup successful');\n              setTimeout(() => {\n                this.router.navigate(['/dashboard']);\n              }, 2000);\n            } else {\n              this.toastr.error(apiResponse.message);\n            }\n          }, (err) => {\n            this.toastr.error('some error occured');\n          });\n      } // end signupFunction\n    \n      ngOnDestroy() {\n        this.subscription.unsubscribe();\n      }\n\n  } \n\n  \n\n  \n\n","<div class=\"login-page\">\n    <br>\n    <mat-card  class=\"login-form\">\n      <section class=\"mat-typography\">\n        <h3 >Please Sign In</h3> \n      </section>\n      <mat-divider></mat-divider>\n      <br>\n      <form [formGroup]=\"createLoginForm\" >\n        <mat-form-field class=\"field-full-width\">\n          <input matInput placeholder =\"Email / User Name*\" formControlName=\"emailOruserName\" #emailOruserName>\n        </mat-form-field>\n          <mat-error *ngIf=\"(createLoginForm.get('emailOruserName').touched) && createLoginForm.get('emailOruserName').errors?.required\">\n          Email /User name is required \n        </mat-error>\n        <mat-form-field class=\"field-full-width\">\n          <input matInput [type]=\"hide ? 'password' : 'text'\" matInput placeholder =\"Password*\" formControlName=\"password\" #password>\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n        </mat-form-field>\n        <mat-error *ngIf=\"(createLoginForm.get('password').touched) && createLoginForm.get('password').errors?.required\">\n          Password is required \n        </mat-error>\n      </form>\n       <br>\n       <button type=\"submit\"  (click)=\"signinFunction()\"\n       [disabled]=\"(createLoginForm.pristine ||createLoginForm.invalid)\" \n       mat-raised-button class=\"btn btn-secondary\" >Sign In</button> &nbsp;&nbsp;&nbsp;\n       <button mat-raised-button class=\"btn btn-secondary\" (click)=\"goToSignup()\">Sign Up</button> &nbsp;\n       <!-- <button mat-raised-button class=\"btn btn-primary\" (click)=\"signInWithFB()\">Sign in with Facebook</button> -->\n       <p> Forgot Your Password ? <a [routerLink]=\"['/request-reset-password']\">Click Here</a></p>\n    </mat-card>\n</div>\n\n\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../app.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\r\nimport country_code_list from '../_files/country_code.json';\r\n//import * as country_code_list from \"../_files/country_code.json\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  createSignupForm:FormGroup;\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  country_code_list=country_code_list;\r\n  hide:boolean;\r\n    constructor(  \r\n      private appService: AppService,\r\n      private router: Router,\r\n      private toastr: ToastrService,\r\n      private fb: FormBuilder){}\r\n     \r\n    ngOnInit() {\r\n      this.resetForm()\r\n    }\r\n\r\n    goToLogin(){\r\n      this.router.navigate(['/']);\r\n    }\r\n\r\n    resetForm(){\r\n      this.createSignupForm = this.fb.group({\r\n        userId:['',],\r\n        firstName:['',Validators.required],\r\n        lastName:[''],\r\n        country_code:['+91'],\r\n        mobileNo:['',[Validators.required, Validators.pattern(\"^(0|[1-9][0-9]*)$\"),Validators.minLength(7),Validators.maxLength(15)]],\r\n        email:['',[Validators.required,Validators.pattern(this.emailPattern)]],\r\n        userName:['',Validators.required],\r\n        password:['',[Validators.required,Validators.minLength(5),Validators.maxLength(32)]],\r\n        createdOn:[''],\r\n      })\r\n    }\r\n  \r\n    signupFunction: any = () => {\r\n      let signUpFormValue=this.createSignupForm.value;\r\n        let data = {\r\n          firstName: signUpFormValue.firstName,\r\n          lastName: signUpFormValue.lastName,\r\n          userName: signUpFormValue.userName,\r\n          mobileNo: signUpFormValue.country_code+signUpFormValue.mobileNo,\r\n          email: signUpFormValue.email,\r\n          password: signUpFormValue.password,\r\n          createdOn: signUpFormValue.createdOn\r\n        }\r\n        console.log(data);\r\n  \r\n        this.appService.signupFunction(data)\r\n          .subscribe((apiResponse) => {\r\n            console.log(apiResponse);\r\n            if (apiResponse.status === 200) {\r\n              this.toastr.success('Signup successful');\r\n              setTimeout(() => {\r\n                this.goToLogin();\r\n              }, 2000);\r\n            } else {\r\n              this.toastr.error(apiResponse.message);\r\n            }\r\n          }, (err) => {\r\n            this.toastr.error('some error occured');\r\n          });\r\n      } // end signupFunction\r\n\r\n    } \r\n  \r\n\r\n  ","<div class=\"register-page\">\n    <br>\n    <mat-card  class=\"signup-form\">\n      <section class=\"mat-typography\">\n        <h3>Sign Up</h3> \n      </section>\n      <mat-divider></mat-divider>\n      <br>\n      <form [formGroup]=\"createSignupForm\" >\n        <mat-form-field class=\"field-full-width\">\n          <input matInput placeholder =\"First Name*\" formControlName=\"firstName\" #firstName>\n        </mat-form-field>\n        <mat-error *ngIf=\"(createSignupForm.get('firstName').touched) && createSignupForm.get('firstName').errors?.required\">\n          First name is required \n        </mat-error>\n        <mat-form-field class=\"field-full-width\">\n          <input matInput placeholder =\"Last Name\" formControlName=\"lastName\" #lastName>\n        </mat-form-field>\n        <mat-form-field class=\"field-full-width\">\n          <mat-select formControlName=\"country_code\">\n            <mat-option *ngFor=\"let code of country_code_list\" [value]=\"code.dial_code\">\n         {{code.name}}</mat-option>\n          </mat-select> \n        </mat-form-field >\n        <mat-form-field class=\"field-full-width\">\n          <input matInput placeholder =\"Mobile Number*\" formControlName=\"mobileNo\" #mobileNo>\n          <span matPrefix>{{createSignupForm.get('country_code').value}}-&nbsp; </span>\n        </mat-form-field>\n        <mat-error *ngIf=\"(createSignupForm.get('mobileNo').touched) && createSignupForm.get('mobileNo').errors?.required\">\n          Mobile Number is required\n        </mat-error>\n        <mat-error *ngIf=\"(createSignupForm.get('mobileNo').touched) && (createSignupForm.get('mobileNo').errors?.pattern || createSignupForm.get('mobileNo').errors?.minlength || createSignupForm.get('mobileNo').errors?.maxlength)\">\n          Please, Enter 7 to 15 digits mobile number\n        </mat-error>\n        <mat-form-field class=\"field-full-width\">\n          <input matInput placeholder =\"Email*\" formControlName=\"email\" #email>\n        </mat-form-field>\n        <mat-error *ngIf=\"(createSignupForm.get('email').touched) && createSignupForm.get('email').errors?.required\">\n          Email is required \n        </mat-error>\n        <mat-error *ngIf=\"(createSignupForm.get('email').touched) && createSignupForm.get('email').errors?.pattern\">\n          Enter a valid email address\n        </mat-error>\n        <mat-form-field class=\"field-full-width\">\n          <input matInput placeholder =\"User Name*\" formControlName=\"userName\" #userName>\n        </mat-form-field>\n        <mat-error *ngIf=\"(createSignupForm.get('userName').touched) && createSignupForm.get('userName').errors?.required\">\n          User Name is required \n        </mat-error>\n        <mat-form-field class=\"field-full-width\">\n            <input matInput placeholder =\"Password*\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" #password>\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n        </mat-form-field>\n        <mat-error *ngIf=\"(createSignupForm.get('password').touched) && createSignupForm.get('password').errors?.required\">\n          Password is required \n        </mat-error>\n        <mat-error *ngIf=\"(createSignupForm.get('password').touched) && (createSignupForm.get('password').errors?.minlength || createSignupForm.get('password').errors?.maxlength)\">\n          Password Length should be greater than 5 and less than 32 .\n        </mat-error>\n      </form>\n      <br>\n       <button type=\"submit\"  (click)=\"signupFunction()\"\n       [disabled]=\"(createSignupForm.pristine ||createSignupForm.invalid)\" \n       mat-raised-button class=\"btn btn-secondary\" >Sign Up</button> &nbsp;&nbsp;&nbsp;\n       <button mat-raised-button class=\"btn btn-secondary\" (click)=\"goToLogin()\">Sign In</button>\n    </mat-card>\n  </div>\n\n     \n     ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AppService } from '../app.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-request-reset',\n  templateUrl: './request-reset.component.html',\n  styleUrls: ['./request-reset.component.css']\n})\nexport class RequestResetComponent implements OnInit {\n\n  RequestResetForm: FormGroup;\n  IsvalidForm = true;\n\n  constructor(private appService: AppService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.RequestResetForm = new FormGroup({\n      //'email': new FormControl(null, [Validators.required, Validators.email]),\n      'userName': new FormControl('',[Validators.required])\n    });\n  }\n\n  RequestResetUser(form) {\n    console.log(form)\n    if (form.valid) {\n      this.IsvalidForm = true;\n      this.appService.requestReset(this.RequestResetForm.value).subscribe(\n        data => {\n          if(!data.error){\n            this.RequestResetForm.reset();\n            this.toastr.success(\"Reset password link send to email sucessfully.\")\n            setTimeout(() => {\n              this.router.navigate(['login']);\n            }, 3000);\n         }\n          else {\n            this.toastr.error(data.message)\n          }\n        },\n        err => {\n          if (err.error.message) {\n            this.toastr.error('Some error occured '+err.error.message)\n          }\n        }\n      );\n    } else {\n      this.IsvalidForm = false;\n    }\n  }\n}\n\n\n\n","<br>\n<mat-card  class=\"request-reset-form\">\n    <section class=\"mat-typography\">\n      <h3 >Forgot Password</h3> \n    </section>\n    <mat-divider></mat-divider>\n    <br>\n    <form [formGroup]=\"RequestResetForm\" >\n      <mat-form-field class=\"field-full-width\">\n        <input matInput placeholder =\"User Name*\" formControlName=\"userName\" #userName>\n      </mat-form-field>\n      <mat-error *ngIf=\"(RequestResetForm.get('userName').touched) && RequestResetForm.get('userName').errors?.required\">\n        User Name is required \n      </mat-error>\n      <!-- <mat-form-field class=\"field-full-width\">\n        <input matInput placeholder =\"Email\" formControlName=\"email\" #email>\n      </mat-form-field>\n      <mat-error *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\">\n        Please enter a valid email!\n      </mat-error> -->\n      <button type=\"submit\" class=\" btn btn-primary\" \n      (click)=\"RequestResetUser(RequestResetForm)\">Reset Password</button>\n    </form>\n</mat-card>\n    \n\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppService } from '../app.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-response-reset',\n  templateUrl: './response-reset.component.html',\n  styleUrls: ['./response-reset.component.css']\n})\nexport class ResponseResetComponent implements OnInit {\n  ResponseResetForm: FormGroup;\n  resetToken: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n\n  constructor( private appService: AppService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private toastr: ToastrService,) { \n      this.CurrentState = 'Wait';\n      this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      console.log(this.resetToken);\n      this.VerifyToken();\n    });\n    }\n\n  ngOnInit(): void {\n    this.Init();\n  }\n  VerifyToken() {\n    this.appService.ValidPasswordToken({ resettoken: this.resetToken }).subscribe(\n      data => {\n        this.CurrentState = 'Verified';\n      },\n      err => {\n        this.CurrentState = 'NotVerified';\n      }\n    );\n  }\n\n  Init() {\n    this.ResponseResetForm = this.fb.group(\n      {\n        resettoken: [this.resetToken],\n        newPassword: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4)]]\n      }\n    );\n  }\n\n  Validate(passwordFormGroup: FormGroup) {\n    const new_password = passwordFormGroup.controls.newPassword.value;\n    const confirm_password = passwordFormGroup.controls.confirmPassword.value;\n\n    if (confirm_password.length <= 0) {\n      return null;\n    }\n\n    if (confirm_password !== new_password) {\n      return {\n        doesNotMatch: true\n      };\n    }\n\n    return null;\n  }\n\n\n  ResetPassword(form) {\n    console.log(form.get('confirmPassword'));\n    if (form.valid) {\n      this.IsResetFormValid = true;\n      this.appService.newPassword(this.ResponseResetForm.value).subscribe(\n        data => {\n          this.ResponseResetForm.reset();\n          this.toastr.success( data.message);\n          setTimeout(() => {\n            this.router.navigate(['sign-in']);\n          }, 3000);\n        },\n        err => {\n          if (err.error.message) {\n            this.toastr.error( err.error.message);\n          }\n        }\n      );\n    } else { this.IsResetFormValid = false; }\n  }\n}","<br>\n<mat-hint *ngIf=\"CurrentState=='Wait'\">Errors appear instantly!</mat-hint>\n<mat-hint *ngIf=\"CurrentState=='NotVerified'\">Invalid URL.</mat-hint>\n<mat-card  class=\"response-reset-form\" *ngIf=\"CurrentState=='Verified'\">\n    <section class=\"mat-typography\">\n      <h3 >Set New Password</h3> \n    </section>\n    <mat-divider></mat-divider>\n    <br>\n    <form [formGroup]=\"ResponseResetForm\" >\n      <mat-form-field class=\"field-full-width\">\n        <input matInput placeholder =\"Password\"  type=\"password\" formControlName=\"newPassword\" #newPassword>\n      </mat-form-field>\n      <mat-error *ngIf=\"!ResponseResetForm.get('newPassword').valid && !IsResetFormValid\">\n            Password is required with atleast 4 characters.\n      </mat-error>\n      <mat-form-field class=\"field-full-width\">\n        <input matInput placeholder =\"Confirm Password\" type=\"password\" formControlName=\"confirmPassword\" #confirmPassword>\n      </mat-form-field>\n      <mat-error *ngIf=\"ResponseResetForm.get('confirmPassword').valid && (ResponseResetForm.get('confirmPassword').value != ResponseResetForm.get('newPassword').value) && !IsResetFormValid\">\n            Confirm Password does not match with password.\n      </mat-error>\n      <button type=\"submit\" class=\" btn btn-primary\" \n      (click)=\"ResetPassword(ResponseResetForm)\">Update Password</button>\n    </form>\n</mat-card>\n\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { environment } from 'src/environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { AppService } from './app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketioService {\n\n  socket;\n  constructor(private toastr: ToastrService,private router:Router,private appService: AppService) {\n    this.socket = io(environment.SOCKET_ENDPOINT);\n  }\n  \n  setupSocketConnection(data) {\n    console.log(this.socket);\n    console.log(data);\n    this.socket.on('notification', (data)=>{\n    let userId=this.appService.getUserInfoFromLocalstorage().userId\n     data.expenseMembers.forEach(element => {\n       if(element.userId==userId){\n        console.log('socket',data);\n        let expenseHistoryNotes='';\n        if(data.expenseHistoryObj.expenseHistoryNotes){\n          data.expenseHistoryObj.expenseHistoryNotes.forEach(element => {\n            expenseHistoryNotes=expenseHistoryNotes+`- ${element}<br>`;\n          });\n        }\n        console.log(expenseHistoryNotes);\n          this.toastr.info(expenseHistoryNotes,data.expenseHistoryObj.expenseHistoryNotesBy, {enableHtml: true}) \n          .onTap.subscribe(()=>this.router.navigate(['/group',data.groupId])); \n       }\n     });  \n    })         \n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  //SOCKET_ENDPOINT: 'http://localhost:3000',\n  //SOCKET_ENDPOINT: 'http://52.66.252.216:3000'\n  SOCKET_ENDPOINT: 'http://52.66.252.216:5001'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}